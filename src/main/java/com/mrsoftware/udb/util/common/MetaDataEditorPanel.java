/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mrsoftware.udb.util.common;

import com.mrsoftware.udb.Entity;
import com.mrsoftware.udb.meta.ColumnData;
import com.mrsoftware.udb.meta.FormMetaData;
import com.mrsoftware.udb.util.common.datamodels.ColumnDataModel;
import com.mrsoftware.udb.util.common.datamodels.FieldListModel;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author NewRodney
 */
public class MetaDataEditorPanel extends javax.swing.JPanel {

    
     /**
     * Creates new form NewJPanel
     */
    public MetaDataEditorPanel() {
        initComponents();
        
        // Set the column data table model once only - it is updated (not replaced) when a field is selected
        fieldDataTable.setModel(new ColumnDataModel(this, fieldDataTable));
        
        ListSelectionModel rowSM = fieldTable.getSelectionModel();

        rowSM.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                if (e.getValueIsAdjusting()) {
                    return;
                }

                ListSelectionModel lsm = (ListSelectionModel) e.getSource();
                if (lsm.isSelectionEmpty()) {
                    System.out.println("No rows are selected.");
                } else {
                    // Find the selected field
                    int selectedRow = lsm.getMinSelectionIndex();
                    
                    // Get the name of the selected field
                    selectedField = (String) fieldTable.getModel().getValueAt(selectedRow, 1);

                    // Get the field list model from the field table
                    FieldListModel flm = (FieldListModel)fieldTable.getModel();
                    
                    // Get the column Data model from the column data table
                    ColumnDataModel cdm = (ColumnDataModel) fieldDataTable.getModel(); 
                    
                    // Get the ColumnData for the selected field from the field list model
                    ColumnData cd = flm.getSelectedColumnData(selectedField);
                    
                    // Get the ColumnData for the selected field
                    cdm.setFieldData(cd);
                    
                    jScrollPane3.invalidate();
                    jScrollPane3.repaint();
                    
                    invalidate();
                    repaint();
                    updateUI();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        name = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        javax.swing.JButton editButton = new javax.swing.JButton();
        newFieldName = new javax.swing.JTextField();
        newFieldButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        fieldDataTable = new javax.swing.JTable();
        addKeyCombo = new javax.swing.JComboBox<>();
        newKeyButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        fieldTable = new javax.swing.JTable();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 32767));

        setMinimumSize(new java.awt.Dimension(907, 568));

        name.setText("jTextField1");
        name.setName("name"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("UltraDb MetaData Editor");

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        newFieldName.setText("jTextField2");
        newFieldName.setName("newFieldName"); // NOI18N

        newFieldButton.setText("jButton2");
        newFieldButton.setName("newFieldButton"); // NOI18N
        newFieldButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFieldButtonActionPerformed(evt);
            }
        });

        fieldDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Key", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        fieldDataTable.setName(""); // NOI18N
        fieldDataTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        fieldDataTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(fieldDataTable);
        fieldDataTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (fieldDataTable.getColumnModel().getColumnCount() > 0) {
            fieldDataTable.getColumnModel().getColumn(0).setResizable(false);
            fieldDataTable.getColumnModel().getColumn(1).setResizable(false);
        }

        addKeyCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        addKeyCombo.setName("descriptorName"); // NOI18N

        newKeyButton.setText("jButton3");
        newKeyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newKeyButtonActionPerformed(evt);
            }
        });

        fieldTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "X", "Field"
            }
        ));
        fieldTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        fieldTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(fieldTable);
        fieldTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (fieldTable.getColumnModel().getColumnCount() > 0) {
            fieldTable.getColumnModel().getColumn(0).setResizable(false);
            fieldTable.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(editButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(newFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(153, 153, 153)
                                        .addComponent(addKeyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(newKeyButton))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(newFieldButton)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newFieldButton)
                            .addComponent(addKeyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newKeyButton))
                        .addContainerGap(63, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(259, 259, 259))))
        );

        getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void newFieldButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFieldButtonActionPerformed
        // Add a new FieldData to the current form schema
       FormMetaData dfs = ((FieldListModel) fieldTable.getModel()).getFormMetaData();

       ColumnData fd = new ColumnData(newFieldName.getText());

       dfs.add(fd);

       fieldTable.invalidate();
       fieldTable.repaint();
    }//GEN-LAST:event_newFieldButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        FieldListModel flm = new FieldListModel();

        fieldTable.setModel(flm);

        fieldTable.getColumnModel().getColumn(0).setPreferredWidth(5);
        fieldTable.getColumnModel().getColumn(1).setPreferredWidth(50);

        flm.load(getViewName());
    }//GEN-LAST:event_editButtonActionPerformed

    private void newKeyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newKeyButtonActionPerformed
        // Add a new value to the field Data
        ColumnDataModel cdm = (ColumnDataModel) fieldDataTable.getModel();

        String nameToAdd = addKeyCombo.getSelectedItem().toString();

        Object[] o = {nameToAdd};

        cdm.addRow(o);

        fieldDataTable.invalidate();
        fieldDataTable.repaint();
    }//GEN-LAST:event_newKeyButtonActionPerformed

    boolean dirty = false;
    Entity entity = null;

    private String selectedField = null;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> addKeyCombo;
    protected javax.swing.JTable fieldDataTable;
    private javax.swing.JTable fieldTable;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField name;
    private javax.swing.JButton newFieldButton;
    private javax.swing.JTextField newFieldName;
    private javax.swing.JButton newKeyButton;
    // End of variables declaration//GEN-END:variables

   public String getTableName() {
        return name.getText();
    }

    public String getViewName() {
        return getTableName();
    }

    public String getFieldName() {
        return selectedField;
    }

    public void setDirty(boolean set) {
        this.dirty = true;
    }

}
